<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Components/simpliciti/nwk_applications/nwk_ioctl.c Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.html"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>Components/simpliciti/nwk_applications/nwk_ioctl.c</h1><a href="nwk__ioctl_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">/**************************************************************************************************</span>
<a name="l00003"></a>00003 <span class="comment">  Filename:       nwk_ioctl.c</span>
<a name="l00004"></a>00004 <span class="comment">  Revised:        $Date: 2009-01-13 11:31:14 -0800 (Tue, 13 Jan 2009) $</span>
<a name="l00005"></a>00005 <span class="comment">  Revision:       $Revision: 18744 $</span>
<a name="l00006"></a>00006 <span class="comment">  Author:         $Author: lfriedman $</span>
<a name="l00007"></a>00007 <span class="comment"></span>
<a name="l00008"></a>00008 <span class="comment">  Description:    This file supports the SimpliciTI IOCTL implmentation. This interface</span>
<a name="l00009"></a>00009 <span class="comment">                  gives applications access to the "driver" network level functions</span>
<a name="l00010"></a>00010 <span class="comment">                  when necessary.</span>
<a name="l00011"></a>00011 <span class="comment"></span>
<a name="l00012"></a>00012 <span class="comment">  Copyright 2004-2007 Texas Instruments Incorporated. All rights reserved.</span>
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">  IMPORTANT: Your use of this Software is limited to those specific rights granted under</span>
<a name="l00015"></a>00015 <span class="comment">  the terms of a software license agreement between the user who downloaded the software,</span>
<a name="l00016"></a>00016 <span class="comment">  his/her employer (which must be your employer) and Texas Instruments Incorporated (the</span>
<a name="l00017"></a>00017 <span class="comment">  "License"). You may not use this Software unless you agree to abide by the terms of the</span>
<a name="l00018"></a>00018 <span class="comment">  License. The License limits your use, and you acknowledge, that the Software may not be</span>
<a name="l00019"></a>00019 <span class="comment">  modified, copied or distributed unless embedded on a Texas Instruments microcontroller</span>
<a name="l00020"></a>00020 <span class="comment">  or used solely and exclusively in conjunction with a Texas Instruments radio frequency</span>
<a name="l00021"></a>00021 <span class="comment">  transceiver, which is integrated into your product. Other than for the foregoing purpose,</span>
<a name="l00022"></a>00022 <span class="comment">  you may not use, reproduce, copy, prepare derivative works of, modify, distribute,</span>
<a name="l00023"></a>00023 <span class="comment">  perform, display or sell this Software and/or its documentation for any purpose.</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="comment">  YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE PROVIDED “AS IS”</span>
<a name="l00026"></a>00026 <span class="comment">  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY</span>
<a name="l00027"></a>00027 <span class="comment">  WARRANTY OF MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.</span>
<a name="l00028"></a>00028 <span class="comment">  IN NO EVENT SHALL TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,</span>
<a name="l00029"></a>00029 <span class="comment">  NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER LEGAL EQUITABLE</span>
<a name="l00030"></a>00030 <span class="comment">  THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES INCLUDING BUT NOT LIMITED TO ANY</span>
<a name="l00031"></a>00031 <span class="comment">  INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST</span>
<a name="l00032"></a>00032 <span class="comment">  DATA, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY</span>
<a name="l00033"></a>00033 <span class="comment">  THIRD PARTIES (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.</span>
<a name="l00034"></a>00034 <span class="comment"></span>
<a name="l00035"></a>00035 <span class="comment">  Should you have any questions regarding your right to use this Software,</span>
<a name="l00036"></a>00036 <span class="comment">  contact Texas Instruments Incorporated at www.TI.com.</span>
<a name="l00037"></a>00037 <span class="comment">**************************************************************************************************/</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="comment">/******************************************************************************</span>
<a name="l00041"></a>00041 <span class="comment"> * INCLUDES</span>
<a name="l00042"></a>00042 <span class="comment"> */</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;string.h&gt;</span>
<a name="l00044"></a>00044 <span class="preprocessor">#include "<a class="code" href="bsp_8h.html">bsp.h</a>"</span>
<a name="l00045"></a>00045 <span class="preprocessor">#include "<a class="code" href="mrfi_8h.html">mrfi.h</a>"</span>
<a name="l00046"></a>00046 <span class="preprocessor">#include "<a class="code" href="nwk__types_8h.html">nwk_types.h</a>"</span>
<a name="l00047"></a>00047 <span class="preprocessor">#include "<a class="code" href="nwk__frame_8h.html">nwk_frame.h</a>"</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include "<a class="code" href="nwk_8h.html">nwk.h</a>"</span>
<a name="l00049"></a>00049 <span class="preprocessor">#include "<a class="code" href="nwk__ioctl_8h.html">nwk_ioctl.h</a>"</span>
<a name="l00050"></a>00050 <span class="preprocessor">#include "<a class="code" href="nwk__globals_8h.html">nwk_globals.h</a>"</span>
<a name="l00051"></a>00051 <span class="preprocessor">#include "<a class="code" href="nwk__security_8h.html">nwk_security.h</a>"</span>
<a name="l00052"></a>00052 <span class="preprocessor">#ifdef ACCESS_POINT</span>
<a name="l00053"></a>00053 <span class="preprocessor"></span><span class="preprocessor">#include "<a class="code" href="nwk__join_8h.html">nwk_join.h</a>"</span>
<a name="l00054"></a>00054 <span class="preprocessor">#endif</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span>
<a name="l00056"></a>00056 <span class="comment">/******************************************************************************</span>
<a name="l00057"></a>00057 <span class="comment"> * MACROS</span>
<a name="l00058"></a>00058 <span class="comment"> */</span>
<a name="l00059"></a>00059 
<a name="l00060"></a>00060 <span class="comment">/******************************************************************************</span>
<a name="l00061"></a>00061 <span class="comment"> * CONSTANTS AND DEFINES</span>
<a name="l00062"></a>00062 <span class="comment"> */</span>
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="comment">/******************************************************************************</span>
<a name="l00065"></a>00065 <span class="comment"> * TYPEDEFS</span>
<a name="l00066"></a>00066 <span class="comment"> */</span>
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 <span class="comment">/******************************************************************************</span>
<a name="l00069"></a>00069 <span class="comment"> * LOCAL VARIABLES</span>
<a name="l00070"></a>00070 <span class="comment"> */</span>
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 <span class="comment">/******************************************************************************</span>
<a name="l00073"></a>00073 <span class="comment"> * LOCAL FUNCTIONS</span>
<a name="l00074"></a>00074 <span class="comment"> */</span>
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="comment">/******************************************************************************</span>
<a name="l00077"></a>00077 <span class="comment"> * GLOBAL VARIABLES</span>
<a name="l00078"></a>00078 <span class="comment"> */</span>
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="comment">/******************************************************************************</span>
<a name="l00081"></a>00081 <span class="comment"> * GLOBAL FUNCTIONS</span>
<a name="l00082"></a>00082 <span class="comment"> */</span>
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 
<a name="l00085"></a>00085 <span class="comment">/******************************************************************************</span>
<a name="l00086"></a>00086 <span class="comment"> * @fn          nwk_rawSend</span>
<a name="l00087"></a>00087 <span class="comment"> *</span>
<a name="l00088"></a>00088 <span class="comment"> * @brief       Builds an outut frame based on information provided by the</span>
<a name="l00089"></a>00089 <span class="comment"> *              caller. This function allows a raw transmission to the target</span>
<a name="l00090"></a>00090 <span class="comment"> *              if the network address is known. this function is used a lot</span>
<a name="l00091"></a>00091 <span class="comment"> *              to support NWK applications.</span>
<a name="l00092"></a>00092 <span class="comment"> *</span>
<a name="l00093"></a>00093 <span class="comment"> * input parameters</span>
<a name="l00094"></a>00094 <span class="comment"> * @param   info    - pointer to strcuture containing info on how to build</span>
<a name="l00095"></a>00095 <span class="comment"> *                    the outgoing frame.</span>
<a name="l00096"></a>00096 <span class="comment"> * output parameters</span>
<a name="l00097"></a>00097 <span class="comment"> *</span>
<a name="l00098"></a>00098 <span class="comment"> * @return         SMPL_SUCCESS</span>
<a name="l00099"></a>00099 <span class="comment"> *                 SMPL_NOMEM       - no room in output frame queue</span>
<a name="l00100"></a>00100 <span class="comment"> *                 SMPL_TX_CCA_FAIL - CCA failure</span>
<a name="l00101"></a>00101 <span class="comment"> */</span>
<a name="l00102"></a><a class="code" href="nwk__ioctl_8h.html#c8446869dfccab10ef9da4d8ba2c3cd0">00102</a> <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> <a class="code" href="nwk__ioctl_8c.html#364cfcd49f15dda7ed5341795ed611d9">nwk_rawSend</a>(<a class="code" href="structioctlRawSend__t.html">ioctlRawSend_t</a> *info)
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104   <a class="code" href="structframeInfo__t.html">frameInfo_t</a> *pOutFrame;
<a name="l00105"></a>00105   <a class="code" href="bsp__msp430__defs_8h.html#3ebf7c4fcbf17b618a01df30a79859d3">uint8_t</a>      hops;
<a name="l00106"></a>00106 
<a name="l00107"></a>00107   <span class="comment">/* If we know frame is going to or from the AP then we can reduce the hop</span>
<a name="l00108"></a>00108 <span class="comment">   * count.</span>
<a name="l00109"></a>00109 <span class="comment">   */</span>
<a name="l00110"></a>00110   <span class="keywordflow">switch</span> (info-&gt;<a class="code" href="structioctlRawSend__t.html#164aa9d2b6c18ee7a17b8c90347a6608">port</a>)
<a name="l00111"></a>00111   {
<a name="l00112"></a>00112     <span class="keywordflow">case</span> <a class="code" href="nwk_8h.html#e02051b08678c489d778c45aba273e54">SMPL_PORT_JOIN</a>:
<a name="l00113"></a>00113     <span class="keywordflow">case</span> <a class="code" href="nwk_8h.html#4e1e4b926963878ad4d3ff372fccb732">SMPL_PORT_FREQ</a>:
<a name="l00114"></a>00114     <span class="keywordflow">case</span> <a class="code" href="nwk_8h.html#854cfe00b979a54563e7eaf6d9dae298">SMPL_PORT_MGMT</a>:
<a name="l00115"></a>00115       hops = MAX_HOPS_FROM_AP;
<a name="l00116"></a>00116       <span class="keywordflow">break</span>;
<a name="l00117"></a>00117 
<a name="l00118"></a>00118     <span class="keywordflow">default</span>:
<a name="l00119"></a>00119       hops = <a class="code" href="nwk_8c.html#7c294406bc0bfbcd9cf2171717878f9e">MAX_HOPS</a>;
<a name="l00120"></a>00120       <span class="keywordflow">break</span>;
<a name="l00121"></a>00121   }
<a name="l00122"></a>00122 
<a name="l00123"></a>00123   <span class="keywordflow">if</span> (pOutFrame = <a class="code" href="nwk__frame_8c.html#10dcb91cdb785c086e0b09e43bbf0281">nwk_buildFrame</a>(info-&gt;<a class="code" href="structioctlRawSend__t.html#164aa9d2b6c18ee7a17b8c90347a6608">port</a>, info-&gt;<a class="code" href="structioctlRawSend__t.html#c1580813543a2e988a60270b7876e5a2">msg</a>, info-&gt;<a class="code" href="structioctlRawSend__t.html#5d07983638220a3107820d4f5b2485df">len</a>, hops))
<a name="l00124"></a>00124   {
<a name="l00125"></a>00125     memcpy(<a class="code" href="mrfi_8h.html#4c6ccf692a5a03b1614af28106157a05">MRFI_P_DST_ADDR</a>(&amp;pOutFrame-&gt;<a class="code" href="structframeInfo__t.html#761ae14e3588ca7ecbb6fec0c14b9673">mrfiPkt</a>), info-&gt;<a class="code" href="structioctlRawSend__t.html#e4725e8d2bc4756a84fd40b74d234b36">addr</a>, <a class="code" href="nwk__types_8h.html#e02a66bd1cfdc9b099bcea9b29704a66">NET_ADDR_SIZE</a>);
<a name="l00126"></a>00126 <span class="preprocessor">#ifdef SMPL_SECURE</span>
<a name="l00127"></a>00127 <span class="preprocessor"></span>    <a class="code" href="nwk__security_8h.html#f124cfec802c86dd5d7e6360c1caefe8">nwk_setSecureFrame</a>(&amp;pOutFrame-&gt;<a class="code" href="structframeInfo__t.html#761ae14e3588ca7ecbb6fec0c14b9673">mrfiPkt</a>, info-&gt;<a class="code" href="structioctlRawSend__t.html#5d07983638220a3107820d4f5b2485df">len</a>, 0);
<a name="l00128"></a>00128 <span class="preprocessor">#endif  </span><span class="comment">/* SMPL_SECURE */</span>
<a name="l00129"></a>00129     <span class="keywordflow">return</span> <a class="code" href="nwk__frame_8c.html#d3b2907dd4eb2703595235745c91b705">nwk_sendFrame</a>(pOutFrame, <a class="code" href="mrfi_8h.html#b9d50ee5f65cfcaa63fefa633ce5fb7b">MRFI_TX_TYPE_CCA</a>);
<a name="l00130"></a>00130   }
<a name="l00131"></a>00131   <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155ee401fb249ec01cc76f6354a58612e0bc">SMPL_NOMEM</a>;
<a name="l00132"></a>00132 }
<a name="l00133"></a>00133 
<a name="l00134"></a>00134 <span class="comment">/******************************************************************************</span>
<a name="l00135"></a>00135 <span class="comment"> * @fn          nwk_rawReceive</span>
<a name="l00136"></a>00136 <span class="comment"> *</span>
<a name="l00137"></a>00137 <span class="comment"> * @brief       Retriievs specified from from the input frame queue. Additional</span>
<a name="l00138"></a>00138 <span class="comment"> *              information such as source address and hop count may also be</span>
<a name="l00139"></a>00139 <span class="comment"> *              retrieved</span>
<a name="l00140"></a>00140 <span class="comment"> *</span>
<a name="l00141"></a>00141 <span class="comment"> * input parameters</span>
<a name="l00142"></a>00142 <span class="comment"> * @param   info    - pointer to structure containing info on what to retrieve</span>
<a name="l00143"></a>00143 <span class="comment"> *</span>
<a name="l00144"></a>00144 <span class="comment"> * output parameters - actually populated by nwk_retrieveFrame()</span>
<a name="l00145"></a>00145 <span class="comment"> *      info-&gt;msg      - application payload copied here</span>
<a name="l00146"></a>00146 <span class="comment"> *      info-&gt;len      - length of received application payload</span>
<a name="l00147"></a>00147 <span class="comment"> *      info-&gt;addr     - if non-NULL points to memory to be populated with</span>
<a name="l00148"></a>00148 <span class="comment"> *                       source address of retrieved frame.</span>
<a name="l00149"></a>00149 <span class="comment"> *      info-&gt;hopCount - if non-NULL points to memory to be populated with</span>
<a name="l00150"></a>00150 <span class="comment"> *                       hop count of retrieved frame.</span>
<a name="l00151"></a>00151 <span class="comment"> *</span>
<a name="l00152"></a>00152 <span class="comment"> * @return   Status of operation.</span>
<a name="l00153"></a>00153 <span class="comment"> */</span>
<a name="l00154"></a><a class="code" href="nwk__ioctl_8h.html#b926930f6599bcad9cd9118ba7122bce">00154</a> <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> <a class="code" href="nwk__ioctl_8c.html#5751c57bc3a69532d65def5b24cfed5c">nwk_rawReceive</a>(<a class="code" href="structioctlRawReceive__t.html">ioctlRawReceive_t</a> *info)
<a name="l00155"></a>00155 {
<a name="l00156"></a>00156   <a class="code" href="structrcvContext__t.html">rcvContext_t</a> rcv;
<a name="l00157"></a>00157 
<a name="l00158"></a>00158   rcv.<a class="code" href="structrcvContext__t.html#e433e5d52aa44c5c7879974de1ff176e">type</a>   = <a class="code" href="nwk__types_8h.html#8daa3210ac78449bb0c7c427e3ab7faf327662e8af923b2a1631667781234e81">RCV_NWK_PORT</a>;
<a name="l00159"></a>00159   rcv.<a class="code" href="structrcvContext__t.html#e5743a9e0eb5d3725e4612c9997be345">t</a>.<a class="code" href="structrcvContext__t.html#33b55de9ade1e22ed74a2f01fcc5c779">port</a> = info-&gt;<a class="code" href="structioctlRawReceive__t.html#3228d63e7cc230fc84c0afed9ee9bee5">port</a>;
<a name="l00160"></a>00160 
<a name="l00161"></a>00161   <span class="keywordflow">return</span> <a class="code" href="nwk__frame_8h.html#a6d91e70313bbaa2afbbd302c400cce5">nwk_retrieveFrame</a>(&amp;rcv, info-&gt;<a class="code" href="structioctlRawReceive__t.html#f15960b0f01c9c5143ec150da477cdb0">msg</a>, &amp;info-&gt;<a class="code" href="structioctlRawReceive__t.html#d60d962150296255b4eddffe45af59ba">len</a>, info-&gt;<a class="code" href="structioctlRawReceive__t.html#77dbbbbc4932fc13d01211bf0cf2885f">addr</a>, &amp;info-&gt;<a class="code" href="structioctlRawReceive__t.html#6e0a837a5d44c23abf97bd04012f4702">hopCount</a>);
<a name="l00162"></a>00162 }
<a name="l00163"></a>00163 
<a name="l00164"></a>00164 <span class="comment">/******************************************************************************</span>
<a name="l00165"></a>00165 <span class="comment"> * @fn          nwk_radioControl</span>
<a name="l00166"></a>00166 <span class="comment"> *</span>
<a name="l00167"></a>00167 <span class="comment"> * @brief       Handle radio control functions.</span>
<a name="l00168"></a>00168 <span class="comment"> *</span>
<a name="l00169"></a>00169 <span class="comment"> * input parameters</span>
<a name="l00170"></a>00170 <span class="comment"> * @param   action   - radio operation to perform. currently suppoerted:</span>
<a name="l00171"></a>00171 <span class="comment"> *                         sleep/unsleep</span>
<a name="l00172"></a>00172 <span class="comment"> * output parameters</span>
<a name="l00173"></a>00173 <span class="comment"> *</span>
<a name="l00174"></a>00174 <span class="comment"> * @return   Status of operation.</span>
<a name="l00175"></a>00175 <span class="comment"> */</span>
<a name="l00176"></a><a class="code" href="nwk__ioctl_8h.html#afa585d4a985bfa61e3030726a67156f">00176</a> <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> <a class="code" href="nwk__ioctl_8c.html#3a492c3cfee2a0914e2b23e3582d7813">nwk_radioControl</a>(<a class="code" href="nwk__types_8h.html#b8d599138a632e96c6d7683fa285e6bb">ioctlAction_t</a> action, <span class="keywordtype">void</span> *val)
<a name="l00177"></a>00177 {
<a name="l00178"></a>00178   <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> rc = <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00179"></a>00179 
<a name="l00180"></a>00180   <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb70de0f9ef74591fe62bbbaf00fd09a7a87">IOCTL_ACT_RADIO_SLEEP</a> == action)
<a name="l00181"></a>00181   {
<a name="l00182"></a>00182     <span class="comment">/* go to sleep mode. */</span>
<a name="l00183"></a>00183     <a class="code" href="mrfi_8h.html#c8d88d203617cc03a117c42d5a454ca5">MRFI_RxIdle</a>();
<a name="l00184"></a>00184     <a class="code" href="mrfi_8h.html#cc1d1b6946d8642fc38688da3f2f0852">MRFI_Sleep</a>();
<a name="l00185"></a>00185   }
<a name="l00186"></a>00186   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb7044474778124a44f6b4b13ae79036d41e">IOCTL_ACT_RADIO_AWAKE</a> == action)
<a name="l00187"></a>00187   {
<a name="l00188"></a>00188     <a class="code" href="mrfi_8h.html#1182d651fc4deb6d00d6e4b6cf6ab2ea">MRFI_WakeUp</a>();
<a name="l00189"></a>00189 
<a name="l00190"></a>00190 <span class="preprocessor">#if !defined( END_DEVICE )</span>
<a name="l00191"></a>00191 <span class="preprocessor"></span>    <a class="code" href="mrfi_8h.html#001dcf041ae1874ca47cbff5454a376d">MRFI_RxOn</a>();
<a name="l00192"></a>00192 <span class="preprocessor">#endif</span>
<a name="l00193"></a>00193 <span class="preprocessor"></span>
<a name="l00194"></a>00194   }
<a name="l00195"></a>00195   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb704d2c977520991149f1766b22461503da">IOCTL_ACT_RADIO_SIGINFO</a> == action)
<a name="l00196"></a>00196   {
<a name="l00197"></a>00197     <a class="code" href="structioctlRadioSiginfo__t.html">ioctlRadioSiginfo_t</a> *pSigInfo = (<a class="code" href="structioctlRadioSiginfo__t.html">ioctlRadioSiginfo_t</a> *)val;
<a name="l00198"></a>00198     <a class="code" href="structconnInfo__t.html">connInfo_t</a>          *pCInfo   = <a class="code" href="nwk_8c.html#3682eb43b9a650b6f914589125826b7b">nwk_getConnInfo</a>(pSigInfo-&gt;<a class="code" href="structioctlRadioSiginfo__t.html#ee4d0bd12bf0fcc36f4ffc6c00f5f775">lid</a>);
<a name="l00199"></a>00199 
<a name="l00200"></a>00200     <span class="keywordflow">if</span> (!pCInfo)
<a name="l00201"></a>00201     {
<a name="l00202"></a>00202       <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00203"></a>00203     }
<a name="l00204"></a>00204     memcpy(&amp;pSigInfo-&gt;<a class="code" href="structioctlRadioSiginfo__t.html#1a3827fd68265949ba3f831cd8c55f24">sigInfo</a>, &amp;pCInfo-&gt;<a class="code" href="structconnInfo__t.html#9f40081cece263916a43f43a09edb3be">sigInfo</a>, <span class="keyword">sizeof</span>(pCInfo-&gt;<a class="code" href="structconnInfo__t.html#9f40081cece263916a43f43a09edb3be">sigInfo</a>));
<a name="l00205"></a>00205   }
<a name="l00206"></a>00206   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb70f1646143210fadb6f2e030f224783eac">IOCTL_ACT_RADIO_RSSI</a> == action)
<a name="l00207"></a>00207   {
<a name="l00208"></a>00208     *((<a class="code" href="nwk__types_8h.html#b8ea7c44bb8576b8f235cef19cd96569">rssi_t</a> *)val) = <a class="code" href="mrfi_8h.html#95162b51237ad0a5cf8349570426e4e3">MRFI_Rssi</a>();
<a name="l00209"></a>00209   }
<a name="l00210"></a>00210   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb7076dbf79daa2dc11202250b0407c69386">IOCTL_ACT_RADIO_RXON</a> == action)
<a name="l00211"></a>00211   {
<a name="l00212"></a>00212     <a class="code" href="mrfi_8h.html#001dcf041ae1874ca47cbff5454a376d">MRFI_RxOn</a>();
<a name="l00213"></a>00213   }
<a name="l00214"></a>00214   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb70fbde34c8817bcf1b39b157cf86cde15e">IOCTL_ACT_RADIO_RXIDLE</a> == action)
<a name="l00215"></a>00215   {
<a name="l00216"></a>00216     <a class="code" href="mrfi_8h.html#c8d88d203617cc03a117c42d5a454ca5">MRFI_RxIdle</a>();
<a name="l00217"></a>00217   }
<a name="l00218"></a>00218 <span class="preprocessor">#ifdef EXTENDED_API</span>
<a name="l00219"></a>00219 <span class="preprocessor"></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb707c4245e4c72276792689f71288f2c18c">IOCTL_ACT_RADIO_SETPWR</a> == action)
<a name="l00220"></a>00220   {
<a name="l00221"></a>00221     <a class="code" href="bsp__msp430__defs_8h.html#3ebf7c4fcbf17b618a01df30a79859d3">uint8_t</a> idx;
<a name="l00222"></a>00222 
<a name="l00223"></a>00223     <span class="keywordflow">switch</span> (*(<a class="code" href="nwk__types_8h.html#11b4dd36aabd154b7aec207cf89ea933">ioctlLevel_t</a> *)val)
<a name="l00224"></a>00224     {
<a name="l00225"></a>00225       <span class="keywordflow">case</span> <a class="code" href="nwk__types_8h.html#27ccd389ece3a7bf2ec79e9ac65b56122fcadb2235502c0be1f91b342188c4ab">IOCTL_LEVEL_2</a>:
<a name="l00226"></a>00226         idx = 2;
<a name="l00227"></a>00227         <span class="keywordflow">break</span>;
<a name="l00228"></a>00228 
<a name="l00229"></a>00229       <span class="keywordflow">case</span> <a class="code" href="nwk__types_8h.html#27ccd389ece3a7bf2ec79e9ac65b5612cb04bab54a2bd9edc9571f9726d5961e">IOCTL_LEVEL_1</a>:
<a name="l00230"></a>00230         idx = 1;
<a name="l00231"></a>00231         <span class="keywordflow">break</span>;
<a name="l00232"></a>00232 
<a name="l00233"></a>00233       <span class="keywordflow">case</span> <a class="code" href="nwk__types_8h.html#27ccd389ece3a7bf2ec79e9ac65b561274824b33c49b2c22939d301cb872a8b3">IOCTL_LEVEL_0</a>:
<a name="l00234"></a>00234         idx = 0;
<a name="l00235"></a>00235         <span class="keywordflow">break</span>;
<a name="l00236"></a>00236 
<a name="l00237"></a>00237       <span class="keywordflow">default</span>:
<a name="l00238"></a>00238         <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00239"></a>00239     }
<a name="l00240"></a>00240     <a class="code" href="mrfi_8h.html#01d266117019012d43d677daef7fffb1">MRFI_SetRFPwr</a>(idx);
<a name="l00241"></a>00241     <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00242"></a>00242   }
<a name="l00243"></a>00243 <span class="preprocessor">#endif  </span><span class="comment">/* EXTENDED_API */</span>
<a name="l00244"></a>00244   <span class="keywordflow">else</span>
<a name="l00245"></a>00245   {
<a name="l00246"></a>00246     rc = <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00247"></a>00247   }
<a name="l00248"></a>00248   <span class="keywordflow">return</span> rc;
<a name="l00249"></a>00249 }
<a name="l00250"></a>00250 
<a name="l00251"></a>00251 <span class="comment">/******************************************************************************</span>
<a name="l00252"></a>00252 <span class="comment"> * @fn          nwk_joinContext</span>
<a name="l00253"></a>00253 <span class="comment"> *</span>
<a name="l00254"></a>00254 <span class="comment"> * @brief       For Access Points we need a way to support changing the Join</span>
<a name="l00255"></a>00255 <span class="comment"> *              context. This will allow arbitration bewteen potentially nearby</span>
<a name="l00256"></a>00256 <span class="comment"> *              Access Points when a new device is joining.</span>
<a name="l00257"></a>00257 <span class="comment"> *</span>
<a name="l00258"></a>00258 <span class="comment"> * input parameters</span>
<a name="l00259"></a>00259 <span class="comment"> * @param   action  - Join context is either on or off.</span>
<a name="l00260"></a>00260 <span class="comment"> *</span>
<a name="l00261"></a>00261 <span class="comment"> * output parameters</span>
<a name="l00262"></a>00262 <span class="comment"> *</span>
<a name="l00263"></a>00263 <span class="comment"> * @return   Status of operation. Currently always succeeds.</span>
<a name="l00264"></a>00264 <span class="comment"> */</span>
<a name="l00265"></a>00265 <span class="preprocessor">#ifdef ACCESS_POINT</span>
<a name="l00266"></a>00266 <span class="preprocessor"></span><a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> nwk_joinContext(<a class="code" href="nwk__types_8h.html#b8d599138a632e96c6d7683fa285e6bb">ioctlAction_t</a> action)
<a name="l00267"></a>00267 {
<a name="l00268"></a>00268   <a class="code" href="nwk__join_8h.html#26d7ab6b148ea0bea4059c67019954eb">nwk_setJoinContext</a>((<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb7054465a813a6b08028ee8b5adae85bd29">IOCTL_ACT_ON</a> == action) ? <a class="code" href="nwk__join_8h.html#67fbede5c2df011ad6704bc78d2ccb8e">JOIN_CONTEXT_ON</a> : <a class="code" href="nwk__join_8h.html#572b82af572b2702720d21c088463958">JOIN_CONTEXT_OFF</a>);
<a name="l00269"></a>00269 
<a name="l00270"></a>00270   <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00271"></a>00271 }
<a name="l00272"></a>00272 <span class="preprocessor">#endif</span>
<a name="l00273"></a>00273 <span class="preprocessor"></span>
<a name="l00274"></a>00274 <span class="comment">/******************************************************************************</span>
<a name="l00275"></a>00275 <span class="comment"> * @fn          nwk_deviceAddress</span>
<a name="l00276"></a>00276 <span class="comment"> *</span>
<a name="l00277"></a>00277 <span class="comment"> * @brief       Set or Get this device address. The Set must be done before</span>
<a name="l00278"></a>00278 <span class="comment"> *              SMPL_Init() for it to take effect. The Get is always legal but</span>
<a name="l00279"></a>00279 <span class="comment"> *              the value could be invalid if it is called before a valid set</span>
<a name="l00280"></a>00280 <span class="comment"> *              call is made.</span>
<a name="l00281"></a>00281 <span class="comment"> *</span>
<a name="l00282"></a>00282 <span class="comment"> * input parameters</span>
<a name="l00283"></a>00283 <span class="comment"> * @param   action  - Gte or Set</span>
<a name="l00284"></a>00284 <span class="comment"> * @param   addr    - pointer to address object containing value on Set</span>
<a name="l00285"></a>00285 <span class="comment"> *</span>
<a name="l00286"></a>00286 <span class="comment"> * output parameters</span>
<a name="l00287"></a>00287 <span class="comment"> * @param   addr    - pointer to address object to receive value on Get.</span>
<a name="l00288"></a>00288 <span class="comment"> *</span>
<a name="l00289"></a>00289 <span class="comment"> * @return   SMPL_SUCCESS</span>
<a name="l00290"></a>00290 <span class="comment"> *           SMPL_BAD_PARAM  Action request illegal or a Set request</span>
<a name="l00291"></a>00291 <span class="comment"> *                           was not respected.</span>
<a name="l00292"></a>00292 <span class="comment"> */</span>
<a name="l00293"></a><a class="code" href="nwk__ioctl_8h.html#fdfaf21604046bb6cb15b9983ef2392c">00293</a> <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> <a class="code" href="nwk__ioctl_8c.html#77f61628a54caad076eb60aab1e23bc3">nwk_deviceAddress</a>(<a class="code" href="nwk__types_8h.html#b8d599138a632e96c6d7683fa285e6bb">ioctlAction_t</a> action, <a class="code" href="structaddr__t.html">addr_t</a> *addr)
<a name="l00294"></a>00294 {
<a name="l00295"></a>00295   <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> rc = <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00296"></a>00296 
<a name="l00297"></a>00297   <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb706258e2a6a3778bccbd1385a24b009b1f">IOCTL_ACT_GET</a> == action)
<a name="l00298"></a>00298   {
<a name="l00299"></a>00299     memcpy(addr, <a class="code" href="nwk__globals_8c.html#ba3bdc840ef7acd57d2ef0a25be3bf1a">nwk_getMyAddress</a>(), <span class="keyword">sizeof</span>(<a class="code" href="structaddr__t.html">addr_t</a>));
<a name="l00300"></a>00300     rc = <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00301"></a>00301   }
<a name="l00302"></a>00302   <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb7043642de02201ab356b763d373ae41701">IOCTL_ACT_SET</a> == action)
<a name="l00303"></a>00303   {
<a name="l00304"></a>00304     <span class="keywordflow">if</span> (<a class="code" href="nwk__globals_8c.html#a41bc7679a67e66010c8ab90f8bc3349">nwk_setMyAddress</a>(addr))
<a name="l00305"></a>00305     {
<a name="l00306"></a>00306       rc = <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00307"></a>00307     }
<a name="l00308"></a>00308   }
<a name="l00309"></a>00309 
<a name="l00310"></a>00310   <span class="keywordflow">return</span> rc;
<a name="l00311"></a>00311 }
<a name="l00312"></a>00312 
<a name="l00313"></a>00313 <span class="comment">/******************************************************************************</span>
<a name="l00314"></a>00314 <span class="comment"> * @fn          nwk_connectionControl</span>
<a name="l00315"></a>00315 <span class="comment"> *</span>
<a name="l00316"></a>00316 <span class="comment"> * @brief       Access to connection table. Currently supports only deleting</span>
<a name="l00317"></a>00317 <span class="comment"> *              a connection from the table.</span>
<a name="l00318"></a>00318 <span class="comment"> *</span>
<a name="l00319"></a>00319 <span class="comment"> * input parameters</span>
<a name="l00320"></a>00320 <span class="comment"> * @param   action  - Connection control action (only delete is curently valid).</span>
<a name="l00321"></a>00321 <span class="comment"> * @param   val     - pointer to Link ID of connection on which to operate.</span>
<a name="l00322"></a>00322 <span class="comment"> *</span>
<a name="l00323"></a>00323 <span class="comment"> * output parameters</span>
<a name="l00324"></a>00324 <span class="comment"> *</span>
<a name="l00325"></a>00325 <span class="comment"> * @return   SMPL_SUCCESS</span>
<a name="l00326"></a>00326 <span class="comment"> *           SMPL_BAD_PARAM  Action is not delete</span>
<a name="l00327"></a>00327 <span class="comment"> *                           Link ID is the UUD Link ID</span>
<a name="l00328"></a>00328 <span class="comment"> *                           No connection table info for Link ID</span>
<a name="l00329"></a>00329 <span class="comment"> */</span>
<a name="l00330"></a><a class="code" href="nwk__ioctl_8h.html#a8e6b79ab5d125cb728bae18a4ff5f2a">00330</a> <a class="code" href="nwk__types_8h.html#bc3335170bd809d2456c3764595bb41f">smplStatus_t</a> <a class="code" href="nwk__ioctl_8c.html#0d5d694ba743fe69359a8936c6d51138">nwk_connectionControl</a>(<a class="code" href="nwk__types_8h.html#b8d599138a632e96c6d7683fa285e6bb">ioctlAction_t</a> action, <span class="keywordtype">void</span> *val)
<a name="l00331"></a>00331 {
<a name="l00332"></a>00332   <a class="code" href="structconnInfo__t.html">connInfo_t</a> *pCInfo;
<a name="l00333"></a>00333   <a class="code" href="nwk__types_8h.html#f8f720dc4ed059245ecf82cd256ffa54">linkID_t</a>    lid = *((<a class="code" href="nwk__types_8h.html#f8f720dc4ed059245ecf82cd256ffa54">linkID_t</a> *)val);
<a name="l00334"></a>00334 
<a name="l00335"></a>00335   <span class="keywordflow">if</span> (<a class="code" href="nwk__types_8h.html#dce1d6e720abafed7028bb97ea0ebb70c1fc75dc619ed9a983418159cc230219">IOCTL_ACT_DELETE</a> != action)
<a name="l00336"></a>00336   {
<a name="l00337"></a>00337     <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00338"></a>00338   }
<a name="l00339"></a>00339 
<a name="l00340"></a>00340   <span class="keywordflow">if</span> ((<a class="code" href="nwk_8h.html#118268a7808649aacf235d5696a980ce">SMPL_LINKID_USER_UUD</a> == lid) ||
<a name="l00341"></a>00341       (!(pCInfo=<a class="code" href="nwk_8c.html#3682eb43b9a650b6f914589125826b7b">nwk_getConnInfo</a>(lid))))
<a name="l00342"></a>00342   {
<a name="l00343"></a>00343     <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155eea44aa921af7d502aee7df35a86377b7">SMPL_BAD_PARAM</a>;
<a name="l00344"></a>00344   }
<a name="l00345"></a>00345 
<a name="l00346"></a>00346   <a class="code" href="nwk_8c.html#732114731dc51a52a27e4bc120edc5e0">nwk_freeConnection</a>(pCInfo);
<a name="l00347"></a>00347 
<a name="l00348"></a>00348   <span class="keywordflow">return</span> <a class="code" href="nwk__types_8h.html#e0b034bf9575c473b7fd4ba5daa0155e1587bead2fa0982ec696a5dd4458aa56">SMPL_SUCCESS</a>;
<a name="l00349"></a>00349 }
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Thu Mar 29 11:40:06 2012 by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
