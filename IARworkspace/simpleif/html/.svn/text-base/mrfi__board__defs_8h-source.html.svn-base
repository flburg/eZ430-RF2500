<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Components/bsp/boards/EZ430RF/bsp_external/mrfi_board_defs.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.html"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>Components/bsp/boards/EZ430RF/bsp_external/mrfi_board_defs.h</h1><a href="mrfi__board__defs_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/**************************************************************************************************</span>
<a name="l00002"></a>00002 <span class="comment">  Revised:        $Date: 2007-07-06 11:19:00 -0700 (Fri, 06 Jul 2007) $</span>
<a name="l00003"></a>00003 <span class="comment">  Revision:       $Revision: 13579 $</span>
<a name="l00004"></a>00004 <span class="comment"></span>
<a name="l00005"></a>00005 <span class="comment">  Copyright 2007 Texas Instruments Incorporated.  All rights reserved.</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">  IMPORTANT: Your use of this Software is limited to those specific rights granted under</span>
<a name="l00008"></a>00008 <span class="comment">  the terms of a software license agreement between the user who downloaded the software,</span>
<a name="l00009"></a>00009 <span class="comment">  his/her employer (which must be your employer) and Texas Instruments Incorporated (the</span>
<a name="l00010"></a>00010 <span class="comment">  "License"). You may not use this Software unless you agree to abide by the terms of the</span>
<a name="l00011"></a>00011 <span class="comment">  License. The License limits your use, and you acknowledge, that the Software may not be</span>
<a name="l00012"></a>00012 <span class="comment">  modified, copied or distributed unless embedded on a Texas Instruments microcontroller</span>
<a name="l00013"></a>00013 <span class="comment">  or used solely and exclusively in conjunction with a Texas Instruments radio frequency</span>
<a name="l00014"></a>00014 <span class="comment">  transceiver, which is integrated into your product. Other than for the foregoing purpose,</span>
<a name="l00015"></a>00015 <span class="comment">  you may not use, reproduce, copy, prepare derivative works of, modify, distribute,</span>
<a name="l00016"></a>00016 <span class="comment">  perform, display or sell this Software and/or its documentation for any purpose.</span>
<a name="l00017"></a>00017 <span class="comment"></span>
<a name="l00018"></a>00018 <span class="comment">  YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE PROVIDED “AS IS”</span>
<a name="l00019"></a>00019 <span class="comment">  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY</span>
<a name="l00020"></a>00020 <span class="comment">  WARRANTY OF MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.</span>
<a name="l00021"></a>00021 <span class="comment">  IN NO EVENT SHALL TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,</span>
<a name="l00022"></a>00022 <span class="comment">  NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER LEGAL EQUITABLE</span>
<a name="l00023"></a>00023 <span class="comment">  THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES INCLUDING BUT NOT LIMITED TO ANY</span>
<a name="l00024"></a>00024 <span class="comment">  INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST</span>
<a name="l00025"></a>00025 <span class="comment">  DATA, COST OF PROCUREMENT OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY</span>
<a name="l00026"></a>00026 <span class="comment">  THIRD PARTIES (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.</span>
<a name="l00027"></a>00027 <span class="comment"></span>
<a name="l00028"></a>00028 <span class="comment">  Should you have any questions regarding your right to use this Software,</span>
<a name="l00029"></a>00029 <span class="comment">  contact Texas Instruments Incorporated at www.TI.com.</span>
<a name="l00030"></a>00030 <span class="comment">**************************************************************************************************/</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">/* ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=</span>
<a name="l00033"></a>00033 <span class="comment"> *   MRFI (Minimal RF Interface)</span>
<a name="l00034"></a>00034 <span class="comment"> *   Board definition file.</span>
<a name="l00035"></a>00035 <span class="comment"> *   Target : Texas Instruments EZ430-RF2500</span>
<a name="l00036"></a>00036 <span class="comment"> *            "MSP430 Wireless Development Tool"</span>
<a name="l00037"></a>00037 <span class="comment"> *   Radios : CC2500</span>
<a name="l00038"></a>00038 <span class="comment"> * ~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=~=</span>
<a name="l00039"></a>00039 <span class="comment"> */</span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="preprocessor">#ifndef MRFI_BOARD_DEFS_H</span>
<a name="l00042"></a>00042 <span class="preprocessor"></span><span class="preprocessor">#define MRFI_BOARD_DEFS_H</span>
<a name="l00043"></a>00043 <span class="preprocessor"></span>
<a name="l00044"></a>00044 <span class="comment">/* ------------------------------------------------------------------------------------------------</span>
<a name="l00045"></a>00045 <span class="comment"> *                                           Includes</span>
<a name="l00046"></a>00046 <span class="comment"> * ------------------------------------------------------------------------------------------------</span>
<a name="l00047"></a>00047 <span class="comment"> */</span>
<a name="l00048"></a>00048 <span class="preprocessor">#include "<a class="code" href="bsp_8h.html">bsp.h</a>"</span>
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 <span class="comment">/* ------------------------------------------------------------------------------------------------</span>
<a name="l00051"></a>00051 <span class="comment"> *                                           Defines</span>
<a name="l00052"></a>00052 <span class="comment"> * ------------------------------------------------------------------------------------------------</span>
<a name="l00053"></a>00053 <span class="comment"> */</span>
<a name="l00054"></a>00054 
<a name="l00055"></a>00055 <span class="comment">/* ------------------------------------------------------------------------------------------------</span>
<a name="l00056"></a>00056 <span class="comment"> *                                      GDO0 Pin Configuration</span>
<a name="l00057"></a>00057 <span class="comment"> * ------------------------------------------------------------------------------------------------</span>
<a name="l00058"></a>00058 <span class="comment"> */</span>
<a name="l00059"></a><a class="code" href="mrfi__board__defs_8h.html#ba976cba7d5528242c237ed93bc23153">00059</a> <span class="preprocessor">#define __mrfi_GDO0_BIT__                     6</span>
<a name="l00060"></a><a class="code" href="mrfi__board__defs_8h.html#04f183b8793bc2fe9965831fa0332238">00060</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CONFIG_GDO0_PIN_AS_INPUT()       st( P2SEL &amp;= ~BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* clear pin special function default */</span>
<a name="l00061"></a><a class="code" href="mrfi__board__defs_8h.html#6bfc7a36b47de14ac611e003dd23587f">00061</a> <span class="preprocessor">#define MRFI_GDO0_PIN_IS_HIGH()               (P2IN &amp; BV(__mrfi_GDO0_BIT__))</span>
<a name="l00062"></a>00062 <span class="preprocessor"></span>
<a name="l00063"></a><a class="code" href="mrfi__board__defs_8h.html#ef236f17def9d05740b0e00077315c7e">00063</a> <span class="preprocessor">#define MRFI_GDO0_INT_VECTOR                  PORT2_VECTOR</span>
<a name="l00064"></a><a class="code" href="mrfi__board__defs_8h.html#0cb2837788128da9955eee66fadb6b20">00064</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_ENABLE_GDO0_INT()                st( P2IE  |=  BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00065"></a><a class="code" href="mrfi__board__defs_8h.html#40ac919a62a648b6f457b8bbcb437443">00065</a> <span class="preprocessor">#define MRFI_DISABLE_GDO0_INT()               st( P2IE  &amp;= ~BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00066"></a><a class="code" href="mrfi__board__defs_8h.html#2c062dd6c3e5ea0978e6d45e7a67095f">00066</a> <span class="preprocessor">#define MRFI_GDO0_INT_IS_ENABLED()             (  P2IE  &amp;   BV(__mrfi_GDO0_BIT__) )</span>
<a name="l00067"></a><a class="code" href="mrfi__board__defs_8h.html#89c2f91678f6fa7556ba0681927d869c">00067</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CLEAR_GDO0_INT_FLAG()            st( P2IFG &amp;= ~BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00068"></a><a class="code" href="mrfi__board__defs_8h.html#1f8f4cf9daeceda6378497cb8c0f53f9">00068</a> <span class="preprocessor">#define MRFI_GDO0_INT_FLAG_IS_SET()            (  P2IFG &amp;   BV(__mrfi_GDO0_BIT__) )</span>
<a name="l00069"></a><a class="code" href="mrfi__board__defs_8h.html#1675cace2f7294a93d3f62d7858c9317">00069</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CONFIG_GDO0_RISING_EDGE_INT()    st( P2IES &amp;= ~BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00070"></a><a class="code" href="mrfi__board__defs_8h.html#b5e608a3739665387063d7439568c5eb">00070</a> <span class="preprocessor">#define MRFI_CONFIG_GDO0_FALLING_EDGE_INT()   st( P2IES |=  BV(__mrfi_GDO0_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="comment">/* ------------------------------------------------------------------------------------------------</span>
<a name="l00074"></a>00074 <span class="comment"> *                                      GDO2 Pin Configuration</span>
<a name="l00075"></a>00075 <span class="comment"> * ------------------------------------------------------------------------------------------------</span>
<a name="l00076"></a>00076 <span class="comment"> */</span>
<a name="l00077"></a><a class="code" href="mrfi__board__defs_8h.html#656f2ac9e426c0a02b573d5ae88f07d2">00077</a> <span class="preprocessor">#define __mrfi_GDO2_BIT__                     7</span>
<a name="l00078"></a><a class="code" href="mrfi__board__defs_8h.html#156d3abac3250e8fc82e11c8fe15ae44">00078</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CONFIG_GDO2_PIN_AS_INPUT()       st( P2SEL &amp;= ~BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* clear pin special function default */</span>
<a name="l00079"></a><a class="code" href="mrfi__board__defs_8h.html#7b8673990b5f4db428954c787a414840">00079</a> <span class="preprocessor">#define MRFI_GDO2_PIN_IS_HIGH()               (P2IN &amp; BV(__mrfi_GDO2_BIT__))</span>
<a name="l00080"></a>00080 <span class="preprocessor"></span>
<a name="l00081"></a><a class="code" href="mrfi__board__defs_8h.html#632195f06e2c727baa3867682afde657">00081</a> <span class="preprocessor">#define MRFI_GDO2_INT_VECTOR                  PORT2_VECTOR</span>
<a name="l00082"></a><a class="code" href="mrfi__board__defs_8h.html#2219da3abcf22f7392ae745f765f6edf">00082</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_ENABLE_GDO2_INT()                st( P2IE  |=  BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00083"></a><a class="code" href="mrfi__board__defs_8h.html#689aff2cf970ea79d845f24e3f446bcf">00083</a> <span class="preprocessor">#define MRFI_DISABLE_GDO2_INT()               st( P2IE  &amp;= ~BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00084"></a><a class="code" href="mrfi__board__defs_8h.html#ba238550f68306c1233d6e357ac829b5">00084</a> <span class="preprocessor">#define MRFI_GDO2_INT_IS_ENABLED()             (  P2IE  &amp;   BV(__mrfi_GDO2_BIT__) )</span>
<a name="l00085"></a><a class="code" href="mrfi__board__defs_8h.html#eaf7001021710eea260794674fe70d68">00085</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CLEAR_GDO2_INT_FLAG()            st( P2IFG &amp;= ~BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00086"></a><a class="code" href="mrfi__board__defs_8h.html#90dfd2059d337c05da171e253ff4e1cb">00086</a> <span class="preprocessor">#define MRFI_GDO2_INT_FLAG_IS_SET()            (  P2IFG &amp;   BV(__mrfi_GDO2_BIT__) )</span>
<a name="l00087"></a><a class="code" href="mrfi__board__defs_8h.html#abf6fafce03d5fe963478ea55c241602">00087</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_CONFIG_GDO2_RISING_EDGE_INT()    st( P2IES &amp;= ~BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00088"></a><a class="code" href="mrfi__board__defs_8h.html#b8e38d4e689cfe9ca90e5dca61701de3">00088</a> <span class="preprocessor">#define MRFI_CONFIG_GDO2_FALLING_EDGE_INT()   st( P2IES |=  BV(__mrfi_GDO2_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="comment">/* ------------------------------------------------------------------------------------------------</span>
<a name="l00092"></a>00092 <span class="comment"> *                                      SPI Configuration</span>
<a name="l00093"></a>00093 <span class="comment"> * ------------------------------------------------------------------------------------------------</span>
<a name="l00094"></a>00094 <span class="comment"> */</span>
<a name="l00095"></a>00095 
<a name="l00096"></a>00096 <span class="comment">/* CSn Pin Configuration */</span>
<a name="l00097"></a><a class="code" href="mrfi__board__defs_8h.html#2de083d9e5a28eb969df9be21aa5628e">00097</a> <span class="preprocessor">#define __mrfi_SPI_CSN_GPIO_BIT__             0</span>
<a name="l00098"></a><a class="code" href="mrfi__board__defs_8h.html#fbca1e4e42f21a6519a2d5e028fb6673">00098</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_CONFIG_CSN_PIN_AS_OUTPUT()   st( P3DIR |=  BV(__mrfi_SPI_CSN_GPIO_BIT__); )</span>
<a name="l00099"></a><a class="code" href="mrfi__board__defs_8h.html#f18b37897bef7408c8e7770117b3940e">00099</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_DRIVE_CSN_HIGH()             st( P3OUT |=  BV(__mrfi_SPI_CSN_GPIO_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00100"></a><a class="code" href="mrfi__board__defs_8h.html#15342918d88364876bdfe7bcc05f0dbb">00100</a> <span class="preprocessor">#define MRFI_SPI_DRIVE_CSN_LOW()              st( P3OUT &amp;= ~BV(__mrfi_SPI_CSN_GPIO_BIT__); ) </span><span class="comment">/* atomic operation */</span>
<a name="l00101"></a><a class="code" href="mrfi__board__defs_8h.html#d5d6892b79ae6af9d7455ba2ebdc46aa">00101</a> <span class="preprocessor">#define MRFI_SPI_CSN_IS_HIGH()                 (  P3OUT &amp;   BV(__mrfi_SPI_CSN_GPIO_BIT__) )</span>
<a name="l00102"></a>00102 <span class="preprocessor"></span>
<a name="l00103"></a>00103 <span class="comment">/* SCLK Pin Configuration */</span>
<a name="l00104"></a><a class="code" href="mrfi__board__defs_8h.html#1daea503519737dae4228487cd3a924b">00104</a> <span class="preprocessor">#define __mrfi_SPI_SCLK_GPIO_BIT__            3</span>
<a name="l00105"></a><a class="code" href="mrfi__board__defs_8h.html#09d5b69b3a50ed5d56ea86aaf2910b7c">00105</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_CONFIG_SCLK_PIN_AS_OUTPUT()  st( P3DIR |=  BV(__mrfi_SPI_SCLK_GPIO_BIT__); )</span>
<a name="l00106"></a><a class="code" href="mrfi__board__defs_8h.html#9dd75e016ce3b7dd5817a3ef738bb28e">00106</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_DRIVE_SCLK_HIGH()            st( P3OUT |=  BV(__mrfi_SPI_SCLK_GPIO_BIT__); )</span>
<a name="l00107"></a><a class="code" href="mrfi__board__defs_8h.html#6f4a8064f8c0fa618eb18d82a1db259d">00107</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_DRIVE_SCLK_LOW()             st( P3OUT &amp;= ~BV(__mrfi_SPI_SCLK_GPIO_BIT__); )</span>
<a name="l00108"></a>00108 <span class="preprocessor"></span>
<a name="l00109"></a>00109 <span class="comment">/* SI Pin Configuration */</span>
<a name="l00110"></a><a class="code" href="mrfi__board__defs_8h.html#bd418767079ef73c946e5fff794828cb">00110</a> <span class="preprocessor">#define __mrfi_SPI_SI_GPIO_BIT__              1</span>
<a name="l00111"></a><a class="code" href="mrfi__board__defs_8h.html#1ea0a7833aeaa7690f2c645dfa3d67e5">00111</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_CONFIG_SI_PIN_AS_OUTPUT()    st( P3DIR |=  BV(__mrfi_SPI_SI_GPIO_BIT__); )</span>
<a name="l00112"></a><a class="code" href="mrfi__board__defs_8h.html#ddf7973d8702c11f31c6ea18bc1f85d2">00112</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_DRIVE_SI_HIGH()              st( P3OUT |=  BV(__mrfi_SPI_SI_GPIO_BIT__); )</span>
<a name="l00113"></a><a class="code" href="mrfi__board__defs_8h.html#fc43bc9e173868509ddf61ff9571d946">00113</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_DRIVE_SI_LOW()               st( P3OUT &amp;= ~BV(__mrfi_SPI_SI_GPIO_BIT__); )</span>
<a name="l00114"></a>00114 <span class="preprocessor"></span>
<a name="l00115"></a>00115 <span class="comment">/* SO Pin Configuration */</span>
<a name="l00116"></a><a class="code" href="mrfi__board__defs_8h.html#c2cd58b33932a8b09fa370e4a3f6c4fa">00116</a> <span class="preprocessor">#define __mrfi_SPI_SO_GPIO_BIT__              2</span>
<a name="l00117"></a><a class="code" href="mrfi__board__defs_8h.html#80af64ca7d93aa351f6c598d3e3e3917">00117</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_CONFIG_SO_PIN_AS_INPUT()     </span><span class="comment">/* nothing to required */</span>
<a name="l00118"></a><a class="code" href="mrfi__board__defs_8h.html#d214ef51617615facf0d177bf14294fa">00118</a> <span class="preprocessor">#define MRFI_SPI_SO_IS_HIGH()                 ( P3IN &amp; BV(__mrfi_SPI_SO_GPIO_BIT__) )</span>
<a name="l00119"></a>00119 <span class="preprocessor"></span>
<a name="l00120"></a>00120 <span class="comment">/* SPI Port Configuration */</span>
<a name="l00121"></a><a class="code" href="mrfi__board__defs_8h.html#08b8eedc60ae22b382fba97cdee79324">00121</a> <span class="preprocessor">#define MRFI_SPI_CONFIG_PORT()                st( P3SEL |= BV(__mrfi_SPI_SCLK_GPIO_BIT__) |  \</span>
<a name="l00122"></a>00122 <span class="preprocessor">                                                           BV(__mrfi_SPI_SI_GPIO_BIT__)   |  \</span>
<a name="l00123"></a>00123 <span class="preprocessor">                                                           BV(__mrfi_SPI_SO_GPIO_BIT__); )</span>
<a name="l00124"></a>00124 <span class="preprocessor"></span>
<a name="l00125"></a>00125 <span class="comment">/* read/write macros */</span>
<a name="l00126"></a><a class="code" href="mrfi__board__defs_8h.html#f7a8507edefbebed2a3a0197c3d67c26">00126</a> <span class="preprocessor">#define MRFI_SPI_WRITE_BYTE(x)                st( IFG2 &amp;= ~UCB0RXIFG;  UCB0TXBUF = x; )</span>
<a name="l00127"></a><a class="code" href="mrfi__board__defs_8h.html#a2225243f72735dc38ae3894f22fb16b">00127</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_READ_BYTE()                  UCB0RXBUF</span>
<a name="l00128"></a><a class="code" href="mrfi__board__defs_8h.html#f78ba24fd58f88ae2f33857772dc8ef7">00128</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_WAIT_DONE()                  while(!(IFG2 &amp; UCB0RXIFG));</span>
<a name="l00129"></a>00129 <span class="preprocessor"></span>
<a name="l00130"></a>00130 <span class="comment">/* SPI critical section macros */</span>
<a name="l00131"></a><a class="code" href="mrfi__board__defs_8h.html#8ba913628c935f750d1580b27a9fa7aa">00131</a> <span class="keyword">typedef</span> <a class="code" href="bsp_8h.html#bc199de9e02e7db55d8102978a467a10">bspIState_t</a> <a class="code" href="mrfi__board__defs_8h.html#8ba913628c935f750d1580b27a9fa7aa">mrfiSpiIState_t</a>;
<a name="l00132"></a><a class="code" href="mrfi__board__defs_8h.html#8276ecd39ea94b89b8f9692a021df5bb">00132</a> <span class="preprocessor">#define MRFI_SPI_ENTER_CRITICAL_SECTION(x)    BSP_ENTER_CRITICAL_SECTION(x)</span>
<a name="l00133"></a><a class="code" href="mrfi__board__defs_8h.html#b7bb0993c4c8ed34caad8b88c91b8c27">00133</a> <span class="preprocessor"></span><span class="preprocessor">#define MRFI_SPI_EXIT_CRITICAL_SECTION(x)     BSP_EXIT_CRITICAL_SECTION(x)</span>
<a name="l00134"></a>00134 <span class="preprocessor"></span>
<a name="l00135"></a>00135 
<a name="l00136"></a>00136 <span class="comment">/*</span>
<a name="l00137"></a>00137 <span class="comment"> *  Radio SPI Specifications</span>
<a name="l00138"></a>00138 <span class="comment"> * -----------------------------------------------</span>
<a name="l00139"></a>00139 <span class="comment"> *    Max SPI Clock   :  10 MHz</span>
<a name="l00140"></a>00140 <span class="comment"> *    Data Order      :  MSB transmitted first</span>
<a name="l00141"></a>00141 <span class="comment"> *    Clock Polarity  :  low when idle</span>
<a name="l00142"></a>00142 <span class="comment"> *    Clock Phase     :  sample leading edge</span>
<a name="l00143"></a>00143 <span class="comment"> */</span>
<a name="l00144"></a>00144 
<a name="l00145"></a>00145 <span class="comment">/* initialization macro */</span>
<a name="l00146"></a><a class="code" href="mrfi__board__defs_8h.html#f324ffa9b4678dbdc04405e7e2eed372">00146</a> <span class="preprocessor">#define MRFI_SPI_INIT() \</span>
<a name="l00147"></a>00147 <span class="preprocessor">st ( \</span>
<a name="l00148"></a>00148 <span class="preprocessor">  UCB0CTL1 = UCSWRST;                           \</span>
<a name="l00149"></a>00149 <span class="preprocessor">  UCB0CTL1 = UCSWRST | UCSSEL1;                 \</span>
<a name="l00150"></a>00150 <span class="preprocessor">  UCB0CTL0 = UCCKPH | UCMSB | UCMST | UCSYNC;   \</span>
<a name="l00151"></a>00151 <span class="preprocessor">  UCB0BR0  = 2;                                 \</span>
<a name="l00152"></a>00152 <span class="preprocessor">  UCB0BR1  = 0;                                 \</span>
<a name="l00153"></a>00153 <span class="preprocessor">  MRFI_SPI_CONFIG_PORT();                       \</span>
<a name="l00154"></a>00154 <span class="preprocessor">  UCB0CTL1 &amp;= ~UCSWRST;                         \</span>
<a name="l00155"></a>00155 <span class="preprocessor">)</span>
<a name="l00156"></a>00156 <span class="preprocessor"></span>
<a name="l00157"></a><a class="code" href="mrfi__board__defs_8h.html#358a0d761f48b84e48ccdc5e1d2fd6fc">00157</a> <span class="preprocessor">#define MRFI_SPI_IS_INITIALIZED()         (UCB0CTL0 &amp; UCMST)</span>
<a name="l00158"></a>00158 <span class="preprocessor"></span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160 <span class="comment">/**************************************************************************************************</span>
<a name="l00161"></a>00161 <span class="comment"> *                                  Compile Time Integrity Checks</span>
<a name="l00162"></a>00162 <span class="comment"> **************************************************************************************************</span>
<a name="l00163"></a>00163 <span class="comment"> */</span>
<a name="l00164"></a>00164 <span class="preprocessor">#ifndef BSP_BOARD_EZ430RF</span>
<a name="l00165"></a>00165 <span class="preprocessor"></span><span class="preprocessor">#error "ERROR: Mismatch between specified board and MRFI configuration."</span>
<a name="l00166"></a>00166 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00167"></a>00167 <span class="preprocessor"></span>
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 <span class="comment">/**************************************************************************************************</span>
<a name="l00170"></a>00170 <span class="comment"> */</span>
<a name="l00171"></a>00171 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Thu Mar 29 11:40:05 2012 by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.7 </small></address>
</body>
</html>
